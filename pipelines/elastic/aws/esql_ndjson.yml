priority: 10
vars:
  schedule_interval: 5
  schedule_interval_unit: m
postprocessing:
  - type: template
    template: |+
      {%- set tags = [] -%}
      {% for n in rule.tags %}
        {%- set tag_string = n.namespace ~ '-' ~ n.name -%}
        {%- set tags=tags.append(tag_string) -%}
      {% endfor %}
      {%- set rule_data = {
      "name": rule.title,
      "rule_id": rule.id | lower,
      "author": [rule.author] if rule.author is string else rule.author,
      "description": rule.description,
      "references": rule.references,
      "enabled": true,
      "interval": pipeline.vars.schedule_interval|string ~ pipeline.vars.schedule_interval_unit,
      "from": "now-" ~ pipeline.vars.schedule_interval|string ~ pipeline.vars.schedule_interval_unit,
      "false_positives": rule.falsepositives,
      "immutable": false,
      "output_index": "",
      "meta": {
        "from": "1m"
      },
      "severity": rule.level.name | string | lower if rule.level is not none else "low",
      "severity_mapping": [],
      "to": "now",
      "version": 1,
      "max_signals": 100,
      "exceptions_list": [],
      "setup": "",
      "type": "eql" if rule.custom_attributes.platforms and rule.custom_attributes.platforms.elastic.query_language == "eql" else "esql",
      "note": "",
      "license": "DRL",
      "language": "eql" if rule.custom_attributes.platforms and rule.custom_attributes.platforms.elastic.query_language == "eql" else "esql",
      "index": pipeline.vars.index_names | list,
      "query": query,
      "tags": tags,
      "actions": [],
      "related_integrations": [],
      "required_fields": [],
      "risk_score_mapping": [],
      "risk_score": 21
      }
      -%}

      {{ rule_data | tojson }}
